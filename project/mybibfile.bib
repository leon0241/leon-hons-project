
@article{bergstra_process_1984,
	title = {Process algebra for synchronous communication},
	volume = {60},
	issn = {0019-9958},
	url = {https://www.sciencedirect.com/science/article/pii/S001999588480025X},
	doi = {10.1016/S0019-9958(84)80025-X},
	abstract = {Within the context of an algebraic theory of processes, an equational specification of process cooperation is provided. Four cases are considered: free merge or interleaving, merging with communication, merging with mutual exclusion of tight regions, and synchronous process cooperation. The rewrite system behind the communication algebra is shown to be confluent and terminating (modulo its permutative reductions). Further, some relationships are shown to hold between the four concepts of merging.},
	number = {1},
	urldate = {2024-10-17},
	journal = {Information and Control},
	author = {Bergstra, J. A. and Klop, J. W.},
	month = jan,
	year = {1984},
	pages = {109--137},
	file = {Full Text:/home/leon/Zotero/storage/34W2HZYM/Bergstra and Klop - 1984 - Process algebra for synchronous communication.pdf:application/pdf;ScienceDirect Snapshot:/home/leon/Zotero/storage/UYD5MAKT/S001999588480025X.html:text/html},
}

@misc{hatzel_encoding_2015,
	title = {Encoding {CSP} into {CCS}},
	url = {http://arxiv.org/abs/1508.06712},
	doi = {10.48550/arXiv.1508.06712},
	abstract = {We study encodings from CSP into asynchronous CCS with name passing and matching, so in fact, the asynchronous pi-calculus. By doing so, we discuss two different ways to map the multi-way synchronisation mechanism of CSP into the two-way synchronisation mechanism of CCS. Both encodings satisfy the criteria of Gorla except for compositionality, as both use an additional top-level context. Following the work of Parrow and Sj{\textbackslash}"odin, the first encoding uses a centralised coordinator and establishes a variant of weak bisimilarity between source terms and their translations. The second encoding is decentralised, and thus more efficient, but ensures only a form of coupled similarity between source terms and their translations.},
	urldate = {2024-10-17},
	publisher = {arXiv},
	author = {Hatzel, Meike and Wagner, Christoph and Peters, Kirstin and Nestmann, Uwe},
	month = aug,
	year = {2015},
	note = {arXiv:1508.06712},
	keywords = {Computer Science - Logic in Computer Science},
	file = {Preprint PDF:/home/leon/Zotero/storage/FHDC3NZL/Hatzel et al. - 2015 - Encoding CSP into CCS.pdf:application/pdf;Snapshot:/home/leon/Zotero/storage/9XG4MWHM/1508.html:text/html},
}

@article{baeten_brief_2005,
	series = {Process {Algebra}},
	title = {A brief history of process algebra},
	volume = {335},
	issn = {0304-3975},
	url = {https://www.sciencedirect.com/science/article/pii/S0304397505000307},
	doi = {10.1016/j.tcs.2004.07.036},
	abstract = {This note addresses the history of process algebra as an area of research in concurrency theory, the theory of parallel and distributed systems in computer science. Origins are traced back to the early seventies of the twentieth century, and developments since that time are sketched. The author gives his personal views on these matters. He also considers the present situation, and states some challenges for the future. Note: Also report CS-R 04-02, Department of Mathematics and Computer Science, Technische Universiteit Eindhoven, http://www.win.tue.nl/fm/pubbaeten.html.},
	number = {2},
	urldate = {2024-10-17},
	journal = {Theoretical Computer Science},
	author = {Baeten, J. C. M.},
	month = may,
	year = {2005},
	keywords = {History, Process algebra},
	pages = {131--146},
	file = {ScienceDirect Full Text PDF:/home/leon/Zotero/storage/T3UYY9AA/Baeten - 2005 - A brief history of process algebra.pdf:application/pdf;ScienceDirect Snapshot:/home/leon/Zotero/storage/2CQWSYC7/S0304397505000307.html:text/html},
}

@book{milner_calculus_1980,
	address = {Berlin, Heidelberg},
	series = {Lecture {Notes} in {Computer} {Science}},
	title = {A {Calculus} of {Communicating} {Systems}},
	volume = {92},
	copyright = {http://www.springer.com/tdm},
	isbn = {978-3-540-10235-9 978-3-540-38311-6},
	url = {http://link.springer.com/10.1007/3-540-10235-3},
	urldate = {2024-10-17},
	publisher = {Springer},
	editor = {Milner, Robin and Goos, G. and Hartmanis, J. and Brauer, W. and Brich Hansen, P. and Gries, D. and Moler, C. and Seegmüller, G. and Stoer, J. and Wirth, N.},
	year = {1980},
	doi = {10.1007/3-540-10235-3},
	keywords = {Calc, calculus, communication, data structure, data structures, Equivalence, model, proof, semantics, techniques},
	file = {Submitted Version:/home/leon/Zotero/storage/E3HUZ6KJ/Milner - 1980 - A Calculus of Communicating Systems.pdf:application/pdf},
}

@article{brookes_theory_1984,
	title = {A {Theory} of {Communicating} {Sequential} {Processes}},
	volume = {31},
	issn = {0004-5411},
	url = {https://dl.acm.org/doi/10.1145/828.833},
	doi = {10.1145/828.833},
	abstract = {A mathematical model for communicating sequential processes is
given, and a number of its interesting and useful properties are
stated and proved. The possibilities of nondetermimsm are fully
taken into account.},
	number = {3},
	urldate = {2024-10-17},
	journal = {J. ACM},
	author = {Brookes, S. D. and Hoare, C. A. R. and Roscoe, A. W.},
	month = jun,
	year = {1984},
	pages = {560--599},
	file = {Full Text PDF:/home/leon/Zotero/storage/ZZ8KXRVL/Brookes et al. - 1984 - A Theory of Communicating Sequential Processes.pdf:application/pdf},
}

@article{bergstra_algebraic_nodate,
	title = {An {Algebraic} {Approach} to {Concurrency}},
	language = {en},
	author = {Bergstra, J A and Klop, J W and van Glabbeek, R and Vaandrager, F},
	file = {PDF:/home/leon/Zotero/storage/RGCIZQ3I/Bergstra et al. - An Algebraic Approach to Concurrency.pdf:application/pdf},
}

@inproceedings{bergstra_acp_1989,
	address = {Berlin, Heidelberg},
	title = {{ACPt} a universal axiom system for process specification},
	isbn = {978-3-540-46758-8},
	abstract = {Starting with Basic Process Algebra (BPA), an axiom system for alternative composition (+) and sequential composition (·) of processes, we give a presentation in several intermediate stages leading to ACPτ, Algebra of Communicating Processes with abstraction. At each successive stage an example is given showing that the specification power is increased. Also some graph models for the respective axiom systems are informally presented. We conclude with the Finite Specification Theorem for ACPτ, stating that each finitely branching, effectively presented process (as an element of the graph model) can be specified in ACPτ by means of a finite system of guarded recursion equations.},
	booktitle = {Algebraic {Methods}: {Theory}, {Tools} and {Applications}},
	publisher = {Springer Berlin Heidelberg},
	author = {Bergstra, J. A. and Klop, J. W.},
	editor = {Wirsing, Martin and Bergstra, Jan A.},
	year = {1989},
	pages = {445--463},
}

@article{engberg_calculus_1986,
	title = {A {Calculus} of {Communicating} {Systems} with {Label} {Passing}},
	copyright = {Copyright (c)},
	issn = {2245-9316},
	url = {https://tidsskrift.dk/daimipb/article/view/7559},
	doi = {10.7146/dpb.v15i208.7559},
	abstract = {Milner's Calculus of  Communicating Systems (CCS) is extended with a mechanism for label passing - as an attempt to remedy some of the shortcomings of CCS w.r.t. dynamic change of agent interconnections. In the extended calculus, restriction is viewed formally as a binder, and the calculus allows dynamic change of scope (of label) in connection with communication. It is proved that algebraic properties of strong (and observational) equivalence for CCS are preserved by the extension.  Examples illustrating the expressive power of the calculus and its  methods for reasoning are given.},
	language = {en},
	number = {208},
	urldate = {2024-10-17},
	journal = {DAIMI Report Series},
	author = {Engberg, Uffe and Nielsen, Mogens},
	month = may,
	year = {1986},
	note = {Number: 208},
	file = {Full Text PDF:/home/leon/Zotero/storage/3GFSRH8N/Engberg and Nielsen - 1986 - A Calculus of Communicating Systems with Label Passing.pdf:application/pdf},
}

@inproceedings{parrow_fusion_1998,
	title = {The fusion calculus: expressiveness and symmetry in mobile processes},
	shorttitle = {The fusion calculus},
	url = {https://ieeexplore.ieee.org/document/705654},
	doi = {10.1109/LICS.1998.705654},
	abstract = {We present the fusion calculus as a significant step towards a canonical calculus of concurrency. It simplifies and extends the /spl pi/-calculus. The fusion calculus contains the polyadic /spl pi/-calculus as a proper subcalculus and thus inherits all its expressive power. The gain is that fusion contains actions akin to updating a shared state, and a scoping construct for bounding their effects. Therefore it is easier to represent computational models such as concurrent constraints formalisms. It is also easy to represent the so called strong reduction strategies in the /spl lambda/-calculus, involving reduction under abstraction. In the /spl lambda/-calculus these tasks require elaborate encodings. Our results on the fusion calculus in this paper are the following. We give a structured operational semantics in the traditional style. The novelty lies in a new kind of action, fusion actions for emulating updates of a shared state. We prove that the calculus contains the /spl pi/-calculus as a subcalculus. We define and motivate the bisimulation equivalence and prove a simple characterization of its induced congruence, which is given two versions of a complete axiomatization for finite terms. The expressive power of the calculus is demonstrated by giving a straight-forward encoding of the strong lazy /spl lambda/-calculus, which admits reduction under /spl lambda/ abstraction.},
	urldate = {2024-10-17},
	booktitle = {Proceedings. {Thirteenth} {Annual} {IEEE} {Symposium} on {Logic} in {Computer} {Science} ({Cat}. {No}.{98CB36226})},
	author = {Parrow, J. and Victor, B.},
	month = jun,
	year = {1998},
	note = {ISSN: 1043-6871},
	keywords = {Calculus, Computational modeling, Concurrent computing, Costs, Encoding, Input variables},
	pages = {176--185},
	file = {Full Text PDF:/home/leon/Zotero/storage/SP28LAVA/Parrow and Victor - 1998 - The fusion calculus expressiveness and symmetry in mobile processes.pdf:application/pdf;IEEE Xplore Abstract Record:/home/leon/Zotero/storage/3AYHG66I/705654.html:text/html},
}

@article{abadi_calculus_1999,
	title = {A {Calculus} for {Cryptographic} {Protocols}: {The} {Spi} {Calculus}},
	volume = {148},
	issn = {0890-5401},
	shorttitle = {A {Calculus} for {Cryptographic} {Protocols}},
	url = {https://www.sciencedirect.com/science/article/pii/S0890540198927407},
	doi = {10.1006/inco.1998.2740},
	abstract = {We introduce the spi calculus, an extension of the pi calculus designed for describing and analyzing cryptographic protocols. We show how to use the spi calculus, particularly for studying authentication protocols. The pi calculus (without extension) suffices for some abstract protocols; the spi calculus enables us to consider cryptographic issues in more detail. We represent protocols as processes in the spi calculus and state their security properties in terms of coarse-grained notions of protocol equivalence.},
	number = {1},
	urldate = {2024-10-17},
	journal = {Information and Computation},
	author = {Abadi, Martin and Gordon, Andrew D.},
	month = jan,
	year = {1999},
	pages = {1--70},
	file = {ScienceDirect Snapshot:/home/leon/Zotero/storage/MG7BMTWU/S0890540198927407.html:text/html},
}

@inproceedings{cardelli_mobile_1998,
	address = {Berlin, Heidelberg},
	title = {Mobile ambients},
	isbn = {978-3-540-69720-6},
	doi = {10.1007/BFb0053547},
	abstract = {We introduce a calculus describing the movement of processes and devices, in- cluding movement through administrative domains.},
	language = {en},
	booktitle = {Foundations of {Software} {Science} and {Computation} {Structures}},
	publisher = {Springer},
	author = {Cardelli, Luca and Gordon, Andrew D.},
	editor = {Nivat, Maurice},
	year = {1998},
	keywords = {Mobile Agent, Objective Move, Operational Semantic, Reduction Rule, Turing Machine},
	pages = {140--155},
	file = {Full Text PDF:/home/leon/Zotero/storage/QK82QJLN/Cardelli and Gordon - 1998 - Mobile ambients.pdf:application/pdf},
}

@article{gorla_towards_2010,
	title = {Towards a unified approach to encodability and separation results for process calculi},
	volume = {208},
	issn = {0890-5401},
	url = {https://www.sciencedirect.com/science/article/pii/S0890540110001008},
	doi = {10.1016/j.ic.2010.05.002},
	abstract = {We present a unified approach to evaluate the relative expressive power of process calculi. In particular, we identify a small set of criteria (that have already been somehow presented in the literature) that an encoding should satisfy to be considered a valid means for language comparison. We argue that the combination of such criteria is a valid proposal by noting that: (i) several well-known encodings appeared in the literature satisfy them; (ii) this notion is not trivial, because some known encodings do not satisfy all the criteria we have proposed; (iii) several well-known separation results can be formulated in terms of our criteria; and (iv) some widely believed (but never formally proved) separation results can be proved by using the criteria we propose. Moreover, the criteria defined induce general proof-techniques for separation results that can be easily instantiated to cover known case-studies.},
	number = {9},
	urldate = {2024-10-17},
	journal = {Information and Computation},
	author = {Gorla, Daniele},
	month = sep,
	year = {2010},
	keywords = {Encodings, Expressiveness, Process calculi},
	pages = {1031--1053},
}

@article{parrow_expressiveness_2008,
	series = {Proceedings of the {LIX} {Colloquium} on {Emerging} {Trends} in {Concurrency} {Theory} ({LIX} 2006)},
	title = {Expressiveness of {Process} {Algebras}},
	volume = {209},
	issn = {1571-0661},
	url = {https://www.sciencedirect.com/science/article/pii/S1571066108002260},
	doi = {10.1016/j.entcs.2008.04.011},
	abstract = {We examine ways to measure expressiveness of process algebras, and recapitulate and compare some related results from the literature.},
	urldate = {2024-10-17},
	journal = {Electronic Notes in Theoretical Computer Science},
	author = {Parrow, Joachim},
	month = apr,
	year = {2008},
	keywords = {expressiveness, Process algebra},
	pages = {173--186},
}

@inproceedings{nestmann_welcome_2006,
	address = {Berlin, Heidelberg},
	title = {Welcome to the {Jungle}: {A} {Subjective} {Guide} to {Mobile} {Process} {Calculi}},
	isbn = {978-3-540-37377-3},
	shorttitle = {Welcome to the {Jungle}},
	doi = {10.1007/11817949_4},
	abstract = {Almost 30 years ago, the research on process calculi gained a lot of momentum with the invention of ACP, CCS and CSP. Later on, but also already 20 years ago, researchers started to consider so-called mobile variants of process calculi, in which communication channels were themselves treated as the exchanged data. The original Pi us arose out of a reformulation and extension of CCS. In turn, it boosted the invention and study of a whole zoo of further process calculi.},
	language = {en},
	booktitle = {{CONCUR} 2006 – {Concurrency} {Theory}},
	publisher = {Springer},
	author = {Nestmann, Uwe},
	editor = {Baier, Christel and Hermanns, Holger},
	year = {2006},
	keywords = {Expressive Power, Label Semantic, Lambda Calculus, Mobile Process, Process Calculus},
	pages = {52--63},
	file = {Full Text PDF:/home/leon/Zotero/storage/58N6VAEY/Nestmann - 2006 - Welcome to the Jungle A Subjective Guide to Mobile Process Calculi.pdf:application/pdf},
}

@misc{glabbeek_musings_2012,
	title = {Musings on {Encodings} and {Expressiveness}},
	url = {http://arxiv.org/abs/1208.2750},
	doi = {10.48550/arXiv.1208.2750},
	abstract = {This paper proposes a definition of what it means for one system description language to encode another one, thereby enabling an ordering of system description languages with respect to expressive power. I compare the proposed definition with other definitions of encoding and expressiveness found in the literature, and illustrate it on a case study: comparing the expressive power of CCS and CSP.},
	urldate = {2024-10-17},
	publisher = {arXiv},
	author = {Glabbeek, Rob van},
	month = aug,
	year = {2012},
	note = {arXiv:1208.2750},
	keywords = {Computer Science - Logic in Computer Science},
	file = {Preprint PDF:/home/leon/Zotero/storage/VF6SYCVC/Glabbeek - 2012 - Musings on Encodings and Expressiveness.pdf:application/pdf;Snapshot:/home/leon/Zotero/storage/FVEM82H6/1208.html:text/html},
}

@article{parrow_expressiveness_2008-1,
	series = {Proceedings of the {LIX} {Colloquium} on {Emerging} {Trends} in {Concurrency} {Theory} ({LIX} 2006)},
	title = {Expressiveness of {Process} {Algebras}},
	volume = {209},
	issn = {1571-0661},
	url = {https://www.sciencedirect.com/science/article/pii/S1571066108002260},
	doi = {10.1016/j.entcs.2008.04.011},
	abstract = {We examine ways to measure expressiveness of process algebras, and recapitulate and compare some related results from the literature.},
	urldate = {2024-10-17},
	journal = {Electronic Notes in Theoretical Computer Science},
	author = {Parrow, Joachim},
	month = apr,
	year = {2008},
	keywords = {expressiveness, Process algebra},
	pages = {173--186},
}




@inproceedings{van_glabbeek_expressiveness_1995,
	address = {London},
	title = {On the {Expressiveness} of {ACP}},
	isbn = {978-1-4471-2120-6},
	abstract = {DeSimone showed that a wide class of languages, including CCS, SCCS, CSP and ACP, are expressible up to strong bisimulation equivalence in Meije. He also showed that every recursively enumerable process graph is representable by a Meije expression. Meije in turn is expressible in aprACP (ACP with action prefixing instead of sequential composition).},
	booktitle = {Algebra of {Communicating} {Processes}},
	publisher = {Springer London},
	author = {van Glabbeek, Rob},
	editor = {Ponse, A. and Verhoef, C. and van Vlijmen, S. F. M.},
	year = {1995},
	pages = {188--217},
}


@article{glabbeek_theory_2018,
	title = {A {Theory} of {Encodings} and {Expressiveness}},
	volume = {abs/1805.10415},
	url = {http://arxiv.org/abs/1805.10415},
	journal = {CoRR},
	author = {Glabbeek, Rob van},
	year = {2018},
	note = {arXiv: 1805.10415},
}



@article{peters_comparing_2019,
	title = {Comparing {Process} {Calculi} {Using} {Encodings}},
	volume = {300},
	issn = {2075-2180},
	url = {http://arxiv.org/abs/1908.08633v1},
	doi = {10.4204/EPTCS.300.2},
	language = {en},
	urldate = {2024-10-19},
	journal = {Electronic Proceedings in Theoretical Computer Science},
	author = {Peters, Kirstin},
	month = aug,
	year = {2019},
	pages = {19--38},
	file = {PDF:/home/leon/Zotero/storage/2QFAGMD8/Peters - 2019 - Comparing Process Calculi Using Encodings.pdf:application/pdf},
}

@incollection{van_glabbeek_branching_2017,
	address = {Cham},
	title = {A {Branching} {Time} {Model} of {CSP}},
	isbn = {978-3-319-51046-0},
	url = {https://doi.org/10.1007/978-3-319-51046-0\_14},
	abstract = {I present a branching time model of CSP that is finer than all other models of CSP proposed thus far. It is obtained by taking a semantic equivalence from the linear time – branching time spectrum, namely divergence-preserving coupled similarity, and showing that it is a congruence for the operators of CSP. This equivalence belongs to the bisimulation family of semantic equivalences, in the sense that on transition systems without internal actions it coincides with strong bisimilarity. Nevertheless, enough of the equational laws of CSP remain to obtain a complete axiomatisation for closed, recursion-free terms.},
	language = {en},
	urldate = {2024-10-19},
	booktitle = {Concurrency, {Security}, and {Puzzles}: {Essays} {Dedicated} to {Andrew} {William} {Roscoe} on the {Occasion} of {His} 60th {Birthday}},
	publisher = {Springer International Publishing},
	author = {van Glabbeek, Rob},
	editor = {Gibson-Robinson, Thomas and Hopcroft, Philippa and Lazić, Ranko},
	year = {2017},
	doi = {10.1007/978-3-319-51046-0_14},
	keywords = {Communicate Sequential Process, Internal Action, Label Transition System, Operational Semantic, Parallel Composition},
	pages = {272--293},
	file = {Full Text PDF:/home/leon/Zotero/storage/3XI5G6GY/van Glabbeek - 2017 - A Branching Time Model of CSP.pdf:application/pdf},
}
